clusterGroup:
  name: hub
  isHubCluster: true
  namespaces:
    - openshift-serverless
    - openshift-nfd
    - nvidia-gpu-operator
    - redhat-ods-operator:
        operatorGroup: true
        targetNamespaces:
    - vault
    - golang-external-secrets
    - chromadb-ns
    - minio-ns
    - rag-demo:
        annotations:
          openshift.io/description: 'Databricks RAG Workspace'
          openshift.io/display-name: 'Databricks RAG Workspace'
        labels:
          kubernetes.io/metadata.name: "rag-demo"
          modelmesh-enabled: 'false'
          opendatahub.io/dashboard: 'true'
  subscriptions:
    serverless:
      name: serverless-operator
      annotations:
        argocd.argoproj.io/sync-wave: "-50"
      #namespace: openshift-serverless
      #channel: stable
      #source: redhat-operators
      #sourceNamespace: openshift-marketplace
    istio:
      name: servicemeshoperator
      namespace: openshift-operators
      channel: stable
      source: redhat-operators
      sourceNamespace: openshift-marketplace
      annotations:
        argocd.argoproj.io/sync-wave: "-50"
    nfd:
      name: nfd
      namespace: openshift-nfd
      channel: stable
    nvidia:
      name: gpu-operator-certified
      namespace: nvidia-gpu-operator
      channel: v24.6
      source: certified-operators
    authorino:
      name: authorino-operator
      namespace: openshift-operators
      channel: tech-preview-v1
      source: redhat-operators
      sourceNamespace: openshift-marketplace
      annotations:
        argocd.argoproj.io/sync-wave: "-50"
    rhoai:
      name: rhods-operator
      namespace: redhat-ods-operator
      channel: alpha
      source: redhat-operators
      sourceNamespace: openshift-marketplace

  projects:
    - hub
    - openshift-ai
    - vectordb
    - s3
    - rag
  # Explicitly mention the cluster-state based overrides we plan to use for this pattern.
  # We can use self-referential variables because the chart calls the tpl function with these variables defined
  #sharedValueFiles:
  #  - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
  # sharedValueFiles is a flexible mechanism that will add the listed valuefiles to every app defined in the
  # applications section. We intend this to supplement and possibly even replace previous "magic" mechanisms, though
  # we do not at present have a target date for removal.
  #
  # To replicate the "classic" magic include structure, the clusterGroup would need all of these
  # sharedValueFiles, in this order:
  #   - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.clusterPlatform }}-{{ $.Values.global.clusterVersion }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.clusterPlatform }}-{{ $.Values.clusterGroup.name }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.clusterVersion }}-{{ $.Values.clusterGroup.name }}.yaml"
  #   - '/overrides/values-{{ $.Values.global.localClusterName }}.yaml'

  # This kind of variable substitution will work with any of the variables the Validated Patterns operator knows
  # about and sets, so this is also possible, for example:
  #   - '/overrides/values-{{ $.Values.global.hubClusterDomain }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.localClusterDomain }}.yaml'
  applications:
    nfd-config:
      name: nfd-config
      namespace: openshift-nfd
      project: openshift-ai
      path: charts/all/nfd-config

    nvidia-config:
      name: nvidia-config
      namespace: nvidia-gpu-operator
      project: openshift-ai
      path: charts/all/nvidia-config

    rhoai-config:
      name: rhoai-config
      namespace: redhat-ods-operator
      project: openshift-ai
      path: charts/all/rhoai-config

    vault:
      name: vault
      namespace: vault
      project: hub
      chart: hashicorp-vault
      chartVersion: 0.1.*

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: hub
      chart: golang-external-secrets
      chartVersion: 0.1.*

    chromadb:
      name: chromadb
      namespace: chromadb-ns
      project: vectordb
      path: charts/all/chromadb

    minio:
      name: minio
      namespace: minio-ns
      project: s3
      path: charts/all/minio

    rag-demo:
      name: rag-demo
      namespace: rag-demo
      project: rag
      path: charts/all/rag
